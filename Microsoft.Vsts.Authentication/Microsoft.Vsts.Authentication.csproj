<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" Sdk="Microsoft.NET.Sdk" ToolsVersion="15.0">
  <Import Project="..\packages\MicroBuild.Core.0.2.0\build\MicroBuild.Core.props" Condition="Exists('..\packages\MicroBuild.Core.0.2.0\build\MicroBuild.Core.props')" />
  <Import Project="..\packages\Microsoft.Net.Compilers.2.6.1\build\Microsoft.Net.Compilers.props" Condition="Exists('..\packages\Microsoft.Net.Compilers.2.6.1\build\Microsoft.Net.Compilers.props')" />
  <PropertyGroup Label="Globals">
    <AssemblyName>Microsoft.Vsts.Authentication</AssemblyName>
    <OutputType>Library</OutputType>
    <ProjectGuid>19770407-0415-4A37-914C-F552FF4B90D4</ProjectGuid>
    <RootNamespace>Microsoft.Alm.Authentication</RootNamespace>
    <RunCodeAnalysis>true</RunCodeAnalysis>
    <RuntimeIdentifier>win7</RuntimeIdentifier>
    <TargetFrameworks>netstandard2.0;net451</TargetFrameworks>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <Import Project="..\build.props" />
  <PropertyGroup>
    <ProjectDir>$(MSBuildThisFileDirectory.TrimEnd('\'))\</ProjectDir>
    <IntermediateOutputPath>$(ProjectDir.TrimEnd('\'))\$(IntermediateOutputPath.TrimEnd('\'))\</IntermediateOutputPath>
    <OutputPath>$(ProjectDir.TrimEnd('\'))\$(OutputPath.TrimEnd('\'))\</OutputPath>
    <SigningTarget>$(OutputPath.TrimEnd('\'))\$(AssemblyName).dll</SigningTarget>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.IdentityModel.Clients.ActiveDirectory, Version=3.13.9.1126, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <HintPath>..\packages\Microsoft.IdentityModel.Clients.ActiveDirectory.3.13.9\lib\net45\Microsoft.IdentityModel.Clients.ActiveDirectory.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.IdentityModel.Clients.ActiveDirectory.Platform, Version=3.13.9.1126, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <HintPath>..\packages\Microsoft.IdentityModel.Clients.ActiveDirectory.3.13.9\lib\net45\Microsoft.IdentityModel.Clients.ActiveDirectory.Platform.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Microsoft.Alm.Authentication\Microsoft.Alm.Authentication.csproj">
      <Project>{19770407-0415-459D-BB4F-04FBEFB1BA13}</Project>
      <Name>Microsoft.Alm.Authentication</Name>
    </ProjectReference>
    <ProjectReference Include="..\Microsoft.Alm.Git\Microsoft.Alm.Git.csproj">
      <Project>{19770407-0415-406D-AB3F-3700BB0D06FE}</Project>
      <Name>Microsoft.Alm.Git</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="..\Microsoft.Alm.Authentication\GlobalSuppressions.cs">
      <Link>GlobalSuppressions.cs</Link>
    </Compile>
    <Compile Include="PersonalAccessTokenOptions.cs" />
    <Compile Include="AzureAuthority.cs" />
    <Compile Include="BaseVstsAuthentication.cs" />
    <Compile Include="IAzureAuthority.cs" />
    <Compile Include="IVstsAadAuthentication.cs" />
    <Compile Include="IVstsAuthority.cs" />
    <Compile Include="IVstsMsaAuthentication.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="TokenRegistry.cs" />
    <Compile Include="VstsAadAuthentication.cs" />
    <Compile Include="VstsAdalTokenCache.cs" />
    <Compile Include="VstsAzureAuthority.cs" />
    <Compile Include="VstsLocationServiceException.cs" />
    <Compile Include="VstsMsaAuthentication.cs" />
    <Compile Include="VstsTokenScope.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config">
      <InProject>false</InProject>
    </None>
  </ItemGroup>
  <ItemGroup>
    <FilesToSign Include="$(SigningTarget)">
      <Authenticode>Microsoft</Authenticode>
      <InProject>false</InProject>
    </FilesToSign>
  </ItemGroup>
  <ItemGroup Condition=" '$(TargetFramework)' == 'netstandard2.0' ">
    <PackageReference Include="System.Security.Cryptography.ProtectedData" Version="4.4.0" />
    <PackageReference Include="Microsoft.Net.Compilers" Version="2.6.1" />
  </ItemGroup>
  <ItemGroup Condition=" '$(TargetFramework)' == 'net451' ">
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Security" />
  </ItemGroup>
  <Import Project="..\packages\MSBuildTasks.*\tools\MSBuild.Community.Tasks.Targets" />
  <Import Project="..\build.targets" />
  <Target Name="BuildNupkg" AfterTargets="CopyFilesToOutputDirectory;SignFiles">
    <!-- Read the nupkg meta data from the AssemblyInfo.cs file copied from Microsoft.Vsts.Authentication -->
    <PropertyGroup>
      <In>$([System.IO.File]::ReadAllText('$(ProjectDir.TrimEnd('\'))\Properties\AssemblyInfo.cs'))</In>
      <Pattern>^\s*\[assembly:\s*AssemblyVersion\s*\(\s*"\s*([^"]+)\s*"\s*\)</Pattern>
      <AssemblyVersion>$([System.Text.RegularExpressions.Regex]::Match($(In), $(Pattern), System.Text.RegularExpressions.RegexOptions.Multiline).Groups[1].Value)</AssemblyVersion>
      <Pattern>^\s*\[assembly: AssemblyDescription\s*\(\s*"\s*([^"]+)\s*"\s*\)</Pattern>
      <AssemblyDescription>$([System.Text.RegularExpressions.Regex]::Match($(In), $(Pattern), System.Text.RegularExpressions.RegexOptions.Multiline).Groups[1].Value)</AssemblyDescription>
      <Pattern>^\s*\[assembly: AssemblyProduct\s*\(\s*"\s*([^"]+)\s*"\s*\)</Pattern>
      <AssemblyProduct>$([System.Text.RegularExpressions.Regex]::Match($(In), $(Pattern), System.Text.RegularExpressions.RegexOptions.Multiline).Groups[1].Value)</AssemblyProduct>
      <Pattern>^\s*\[assembly: AssemblyCompany\s*\(\s*"\s*([^"]+)\s*"\s*\)</Pattern>
      <AssemblyCompany>$([System.Text.RegularExpressions.Regex]::Match($(In), $(Pattern), System.Text.RegularExpressions.RegexOptions.Multiline).Groups[1].Value)</AssemblyCompany>
      <Pattern>^\s*\[assembly: AssemblyCopyright\s*\(\s*"\s*([^"]+)\s*"\s*\)</Pattern>
      <AssemblyCopyright>$([System.Text.RegularExpressions.Regex]::Match($(In), $(Pattern), System.Text.RegularExpressions.RegexOptions.Multiline).Groups[1].Value)</AssemblyCopyright>
      <Pattern>^\s*\[assembly: AssemblyTitle\s*\(\s*"\s*([^"]+)\s*"\s*\)</Pattern>
      <AssemblyTitle>$([System.Text.RegularExpressions.Regex]::Match($(In), $(Pattern), System.Text.RegularExpressions.RegexOptions.Multiline).Groups[1].Value)</AssemblyTitle>
    </PropertyGroup>
    <!-- Only download a new copy of nuget.exe if we don't have a copy available -->
    <PropertyGroup>
      <NugetPath>nuget.exe</NugetPath>
      <IsSigned></IsSigned>
      <IsSigned Condition=" '$(SignType)' == '' Or '$(SignType)' == '*Undefined*' ">-unsigned</IsSigned>
      <NugetWorkDir>$(OutputPath.TrimEnd('\'))</NugetWorkDir>
    </PropertyGroup>
    <PropertyGroup Condition="!Exists($(NugetPath))">
      <NugetPath>$(ProjectDir.TrimEnd('\'))\..\packages\NuGet.CommandLine.4.4.1\tools\nuget.exe</NugetPath>
    </PropertyGroup>
    <Exec Command="&quot;$(NugetPath)&quot; pack &quot;$(ProjectDir.TrimEnd('\'))\Microsoft.Alm.Authentication.nuspec&quot; -BasePath &quot;$(NugetWorkDir)&quot; -IncludeReferencedProjects -Properties Configuration=&quot;$(Configuration)&quot;;Version=&quot;$(AssemblyVersion)$(IsSigned)&quot;;Id=&quot;Microsoft.Alm.Authentication&quot;;Title=&quot;$(AssemblyTitle)&quot;;Owners=&quot;$(AssemblyCompany)&quot;;Copyright=&quot;$(AssemblyCopyright)&quot;;Description=&quot;$(AssemblyDescription)&quot; -OutputDirectory &quot;$(NugetWorkDir)&quot;" />
    <Exec Command="&quot;$(NugetPath)&quot; pack &quot;$(ProjectDir.TrimEnd('\'))\Microsoft.Alm.Authentication.symbols.nuspec&quot; -BasePath &quot;$(NugetWorkDir)&quot; -IncludeReferencedProjects -Properties Configuration=&quot;$(Configuration)&quot;;Version=&quot;$(AssemblyVersion)$(IsSigned)&quot;;Id=&quot;Microsoft.Alm.Authentication.symbols&quot;;Title=&quot;$(AssemblyTitle)&quot;;Owners=&quot;$(AssemblyCompany)&quot;;Copyright=&quot;$(AssemblyCopyright)&quot;;Description=&quot;$(AssemblyDescription)&quot; -OutputDirectory &quot;$(NugetWorkDir)&quot;" />
  </Target>
  <Target Name="CopyNupkgToOut" AfterTargets="BuildNupkg">
    <ItemGroup>
      <FilesToCopy Include="$(OutputPath.TrimEnd('\'))\*.nupkg" />
    </ItemGroup>
    <Copy SourceFiles="@(FilesToCopy)" DestinationFolder="$(SolutionDir.TrimEnd('\'))\Deploy" />
  </Target>
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('..\packages\Microsoft.Net.Compilers.2.6.1\build\Microsoft.Net.Compilers.props')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\Microsoft.Net.Compilers.2.6.1\build\Microsoft.Net.Compilers.props'))" />
    <Error Condition="!Exists('..\packages\MicroBuild.Core.0.2.0\build\MicroBuild.Core.props')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\MicroBuild.Core.0.2.0\build\MicroBuild.Core.props'))" />
    <Error Condition="!Exists('..\packages\MicroBuild.Core.0.2.0\build\MicroBuild.Core.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\MicroBuild.Core.0.2.0\build\MicroBuild.Core.targets'))" />
    <Error Condition="!Exists('..\packages\NuGet.CommandLine.4.4.1\tools\NuGet.exe')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\NuGet.CommandLine.4.4.1\tools\NuGet.exe'))" />
  </Target>
  <Import Project="..\packages\MSBuildTasks.1.5.0.235\build\MSBuildTasks.targets" Condition="Exists('..\packages\MSBuildTasks.1.5.0.235\build\MSBuildTasks.targets')" />
  <Import Project="..\packages\MicroBuild.Core.0.2.0\build\MicroBuild.Core.targets" Condition="Exists('..\packages\MicroBuild.Core.0.2.0\build\MicroBuild.Core.targets')" />
</Project>